// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                      String    @id @default(cuid())
  name                    String    @default("")
  gender                  String?
  birthdate               DateTime?
  email                   String    @unique @default("")
  password                String
  publishedProd           Product[] @relation("Product_vendor")
  historyProd             Product[] @relation("Product_buyers")
  role                    Role?     @relation("User_role", fields: [roleId], references: [id])
  roleId                  String?   @map("role")
  createdAt               DateTime? @default(now())
  isInitialUser           Boolean   @default(false)
  passwordResetToken      String?
  passwordResetIssuedAt   DateTime?
  passwordResetRedeemedAt DateTime?

  @@index([roleId])
}

model Role {
  id                String  @id @default(cuid())
  name              String  @default("")
  canManageProducts Boolean @default(false)
  canSeeOtherUsers  Boolean @default(false)
  canManageUsers    Boolean @default(false)
  canManageRoles    Boolean @default(false)
  assignedTo        User[]  @relation("User_role")
}

model Product {
  id          String    @id @default(cuid())
  name        String    @default("")
  description String    @default("")
  tags        Tag[]     @relation("Product_tags")
  vendor      User?     @relation("Product_vendor", fields: [vendorId], references: [id])
  vendorId    String?   @map("vendor")
  buyers      User[]    @relation("Product_buyers")
  createdAt   DateTime? @default(now())
  images      Image[]   @relation("Image_product")

  @@index([vendorId])
}

model Tag {
  id       String    @id @default(cuid())
  name     String    @default("")
  products Product[] @relation("Product_tags")
}

model Image {
  id              String   @id @default(cuid())
  product         Product? @relation("Image_product", fields: [productId], references: [id])
  productId       String?  @map("product")
  image_filesize  Int?
  image_extension String?
  image_width     Int?
  image_height    Int?
  image_id        String?

  @@index([productId])
}
